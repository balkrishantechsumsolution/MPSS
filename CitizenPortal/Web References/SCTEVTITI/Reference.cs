//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CitizenPortal.SCTEVTITI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MigrationCertITISoap", Namespace="http://tempuri.org/")]
    public partial class MigrationCertITI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback MigrationCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewStudentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProvisionalCertificateYearlyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MigrationCertITI() {
            this.Url = global::CitizenPortal.Properties.Settings.Default.CitizenPortal_SCTEVTITI_MigrationCertITI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event MigrationCertificateCompletedEventHandler MigrationCertificateCompleted;
        
        /// <remarks/>
        public event ViewStudentDetailsCompletedEventHandler ViewStudentDetailsCompleted;
        
        /// <remarks/>
        public event ProvisionalCertificateYearlyCompletedEventHandler ProvisionalCertificateYearlyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MigrationCertificate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet MigrationCertificate(string RegistrationNumber, string AcademicYear) {
            object[] results = this.Invoke("MigrationCertificate", new object[] {
                        RegistrationNumber,
                        AcademicYear});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void MigrationCertificateAsync(string RegistrationNumber, string AcademicYear) {
            this.MigrationCertificateAsync(RegistrationNumber, AcademicYear, null);
        }
        
        /// <remarks/>
        public void MigrationCertificateAsync(string RegistrationNumber, string AcademicYear, object userState) {
            if ((this.MigrationCertificateOperationCompleted == null)) {
                this.MigrationCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMigrationCertificateOperationCompleted);
            }
            this.InvokeAsync("MigrationCertificate", new object[] {
                        RegistrationNumber,
                        AcademicYear}, this.MigrationCertificateOperationCompleted, userState);
        }
        
        private void OnMigrationCertificateOperationCompleted(object arg) {
            if ((this.MigrationCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MigrationCertificateCompleted(this, new MigrationCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViewStudentDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ViewStudentDetails(string RegistrationNumber, string Course, string UniqueID) {
            object[] results = this.Invoke("ViewStudentDetails", new object[] {
                        RegistrationNumber,
                        Course,
                        UniqueID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ViewStudentDetailsAsync(string RegistrationNumber, string Course, string UniqueID) {
            this.ViewStudentDetailsAsync(RegistrationNumber, Course, UniqueID, null);
        }
        
        /// <remarks/>
        public void ViewStudentDetailsAsync(string RegistrationNumber, string Course, string UniqueID, object userState) {
            if ((this.ViewStudentDetailsOperationCompleted == null)) {
                this.ViewStudentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewStudentDetailsOperationCompleted);
            }
            this.InvokeAsync("ViewStudentDetails", new object[] {
                        RegistrationNumber,
                        Course,
                        UniqueID}, this.ViewStudentDetailsOperationCompleted, userState);
        }
        
        private void OnViewStudentDetailsOperationCompleted(object arg) {
            if ((this.ViewStudentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewStudentDetailsCompleted(this, new ViewStudentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProvisionalCertificateYearly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ProvisionalCertificateYearly(string RegistrationNumber) {
            object[] results = this.Invoke("ProvisionalCertificateYearly", new object[] {
                        RegistrationNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ProvisionalCertificateYearlyAsync(string RegistrationNumber) {
            this.ProvisionalCertificateYearlyAsync(RegistrationNumber, null);
        }
        
        /// <remarks/>
        public void ProvisionalCertificateYearlyAsync(string RegistrationNumber, object userState) {
            if ((this.ProvisionalCertificateYearlyOperationCompleted == null)) {
                this.ProvisionalCertificateYearlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProvisionalCertificateYearlyOperationCompleted);
            }
            this.InvokeAsync("ProvisionalCertificateYearly", new object[] {
                        RegistrationNumber}, this.ProvisionalCertificateYearlyOperationCompleted, userState);
        }
        
        private void OnProvisionalCertificateYearlyOperationCompleted(object arg) {
            if ((this.ProvisionalCertificateYearlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProvisionalCertificateYearlyCompleted(this, new ProvisionalCertificateYearlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MigrationCertificateCompletedEventHandler(object sender, MigrationCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MigrationCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MigrationCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ViewStudentDetailsCompletedEventHandler(object sender, ViewStudentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewStudentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewStudentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ProvisionalCertificateYearlyCompletedEventHandler(object sender, ProvisionalCertificateYearlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProvisionalCertificateYearlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProvisionalCertificateYearlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
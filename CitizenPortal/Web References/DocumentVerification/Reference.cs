//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CitizenPortal.DocumentVerification {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StudentDetailsWSSoap", Namespace="http://tempuri.org/")]
    public partial class StudentDetailsWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AnswerSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewStudentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback MigrationCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicateDivisionalCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicateSemseterMarkSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicateDivisionalMarksheetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StudentDetailsWS() {
            this.Url = global::CitizenPortal.Properties.Settings.Default.CitizenPortal_DocumentVerification_StudentDetailsWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AnswerSheetCompletedEventHandler AnswerSheetCompleted;
        
        /// <remarks/>
        public event ViewStudentDetailsCompletedEventHandler ViewStudentDetailsCompleted;
        
        /// <remarks/>
        public event MigrationCertificateCompletedEventHandler MigrationCertificateCompleted;
        
        /// <remarks/>
        public event DuplicateDivisionalCertificateCompletedEventHandler DuplicateDivisionalCertificateCompleted;
        
        /// <remarks/>
        public event DuplicateSemseterMarkSheetCompletedEventHandler DuplicateSemseterMarkSheetCompleted;
        
        /// <remarks/>
        public event DuplicateDivisionalMarksheetCompletedEventHandler DuplicateDivisionalMarksheetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AnswerSheet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable AnswerSheet(string RegistrationNo, string SYCode, string ExamYMCode, string BranchCode, string SubjectCode) {
            object[] results = this.Invoke("AnswerSheet", new object[] {
                        RegistrationNo,
                        SYCode,
                        ExamYMCode,
                        BranchCode,
                        SubjectCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void AnswerSheetAsync(string RegistrationNo, string SYCode, string ExamYMCode, string BranchCode, string SubjectCode) {
            this.AnswerSheetAsync(RegistrationNo, SYCode, ExamYMCode, BranchCode, SubjectCode, null);
        }
        
        /// <remarks/>
        public void AnswerSheetAsync(string RegistrationNo, string SYCode, string ExamYMCode, string BranchCode, string SubjectCode, object userState) {
            if ((this.AnswerSheetOperationCompleted == null)) {
                this.AnswerSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnswerSheetOperationCompleted);
            }
            this.InvokeAsync("AnswerSheet", new object[] {
                        RegistrationNo,
                        SYCode,
                        ExamYMCode,
                        BranchCode,
                        SubjectCode}, this.AnswerSheetOperationCompleted, userState);
        }
        
        private void OnAnswerSheetOperationCompleted(object arg) {
            if ((this.AnswerSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnswerSheetCompleted(this, new AnswerSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViewStudentDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ViewStudentDetails(string StudRegdNo, string NameofStudent, string YearofPassing, string Course, string UniqueID) {
            object[] results = this.Invoke("ViewStudentDetails", new object[] {
                        StudRegdNo,
                        NameofStudent,
                        YearofPassing,
                        Course,
                        UniqueID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ViewStudentDetailsAsync(string StudRegdNo, string NameofStudent, string YearofPassing, string Course, string UniqueID) {
            this.ViewStudentDetailsAsync(StudRegdNo, NameofStudent, YearofPassing, Course, UniqueID, null);
        }
        
        /// <remarks/>
        public void ViewStudentDetailsAsync(string StudRegdNo, string NameofStudent, string YearofPassing, string Course, string UniqueID, object userState) {
            if ((this.ViewStudentDetailsOperationCompleted == null)) {
                this.ViewStudentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewStudentDetailsOperationCompleted);
            }
            this.InvokeAsync("ViewStudentDetails", new object[] {
                        StudRegdNo,
                        NameofStudent,
                        YearofPassing,
                        Course,
                        UniqueID}, this.ViewStudentDetailsOperationCompleted, userState);
        }
        
        private void OnViewStudentDetailsOperationCompleted(object arg) {
            if ((this.ViewStudentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewStudentDetailsCompleted(this, new ViewStudentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MigrationCertificate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable MigrationCertificate(string RegistrationNo, string YearOfAdmission) {
            object[] results = this.Invoke("MigrationCertificate", new object[] {
                        RegistrationNo,
                        YearOfAdmission});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void MigrationCertificateAsync(string RegistrationNo, string YearOfAdmission) {
            this.MigrationCertificateAsync(RegistrationNo, YearOfAdmission, null);
        }
        
        /// <remarks/>
        public void MigrationCertificateAsync(string RegistrationNo, string YearOfAdmission, object userState) {
            if ((this.MigrationCertificateOperationCompleted == null)) {
                this.MigrationCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMigrationCertificateOperationCompleted);
            }
            this.InvokeAsync("MigrationCertificate", new object[] {
                        RegistrationNo,
                        YearOfAdmission}, this.MigrationCertificateOperationCompleted, userState);
        }
        
        private void OnMigrationCertificateOperationCompleted(object arg) {
            if ((this.MigrationCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MigrationCertificateCompleted(this, new MigrationCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DuplicateDivisionalCertificate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable DuplicateDivisionalCertificate(string RegistrationNo, string YearOfPassing) {
            object[] results = this.Invoke("DuplicateDivisionalCertificate", new object[] {
                        RegistrationNo,
                        YearOfPassing});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicateDivisionalCertificateAsync(string RegistrationNo, string YearOfPassing) {
            this.DuplicateDivisionalCertificateAsync(RegistrationNo, YearOfPassing, null);
        }
        
        /// <remarks/>
        public void DuplicateDivisionalCertificateAsync(string RegistrationNo, string YearOfPassing, object userState) {
            if ((this.DuplicateDivisionalCertificateOperationCompleted == null)) {
                this.DuplicateDivisionalCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicateDivisionalCertificateOperationCompleted);
            }
            this.InvokeAsync("DuplicateDivisionalCertificate", new object[] {
                        RegistrationNo,
                        YearOfPassing}, this.DuplicateDivisionalCertificateOperationCompleted, userState);
        }
        
        private void OnDuplicateDivisionalCertificateOperationCompleted(object arg) {
            if ((this.DuplicateDivisionalCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicateDivisionalCertificateCompleted(this, new DuplicateDivisionalCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DuplicateSemseterMarkSheet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DuplicateSemseterMarkSheet(string RegistrationNo, string SYCode, string ExamYMCode) {
            object[] results = this.Invoke("DuplicateSemseterMarkSheet", new object[] {
                        RegistrationNo,
                        SYCode,
                        ExamYMCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicateSemseterMarkSheetAsync(string RegistrationNo, string SYCode, string ExamYMCode) {
            this.DuplicateSemseterMarkSheetAsync(RegistrationNo, SYCode, ExamYMCode, null);
        }
        
        /// <remarks/>
        public void DuplicateSemseterMarkSheetAsync(string RegistrationNo, string SYCode, string ExamYMCode, object userState) {
            if ((this.DuplicateSemseterMarkSheetOperationCompleted == null)) {
                this.DuplicateSemseterMarkSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicateSemseterMarkSheetOperationCompleted);
            }
            this.InvokeAsync("DuplicateSemseterMarkSheet", new object[] {
                        RegistrationNo,
                        SYCode,
                        ExamYMCode}, this.DuplicateSemseterMarkSheetOperationCompleted, userState);
        }
        
        private void OnDuplicateSemseterMarkSheetOperationCompleted(object arg) {
            if ((this.DuplicateSemseterMarkSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicateSemseterMarkSheetCompleted(this, new DuplicateSemseterMarkSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DuplicateDivisionalMarksheet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DuplicateDivisionalMarksheet(string RegistrationNo, string ExamYMCode) {
            object[] results = this.Invoke("DuplicateDivisionalMarksheet", new object[] {
                        RegistrationNo,
                        ExamYMCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicateDivisionalMarksheetAsync(string RegistrationNo, string ExamYMCode) {
            this.DuplicateDivisionalMarksheetAsync(RegistrationNo, ExamYMCode, null);
        }
        
        /// <remarks/>
        public void DuplicateDivisionalMarksheetAsync(string RegistrationNo, string ExamYMCode, object userState) {
            if ((this.DuplicateDivisionalMarksheetOperationCompleted == null)) {
                this.DuplicateDivisionalMarksheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicateDivisionalMarksheetOperationCompleted);
            }
            this.InvokeAsync("DuplicateDivisionalMarksheet", new object[] {
                        RegistrationNo,
                        ExamYMCode}, this.DuplicateDivisionalMarksheetOperationCompleted, userState);
        }
        
        private void OnDuplicateDivisionalMarksheetOperationCompleted(object arg) {
            if ((this.DuplicateDivisionalMarksheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicateDivisionalMarksheetCompleted(this, new DuplicateDivisionalMarksheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AnswerSheetCompletedEventHandler(object sender, AnswerSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnswerSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnswerSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ViewStudentDetailsCompletedEventHandler(object sender, ViewStudentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewStudentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewStudentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MigrationCertificateCompletedEventHandler(object sender, MigrationCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MigrationCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MigrationCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DuplicateDivisionalCertificateCompletedEventHandler(object sender, DuplicateDivisionalCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicateDivisionalCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicateDivisionalCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DuplicateSemseterMarkSheetCompletedEventHandler(object sender, DuplicateSemseterMarkSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicateSemseterMarkSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicateSemseterMarkSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DuplicateDivisionalMarksheetCompletedEventHandler(object sender, DuplicateDivisionalMarksheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicateDivisionalMarksheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicateDivisionalMarksheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591